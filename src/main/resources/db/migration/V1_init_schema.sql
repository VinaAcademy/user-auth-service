-- public."permission" definition

-- Drop table

-- DROP TABLE "permission";

CREATE TABLE "permission"
(
    id           int8 GENERATED BY DEFAULT AS IDENTITY ( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1 NO CYCLE) NOT NULL,
    created_date timestamp(6) NULL,
    updated_date timestamp(6) NULL,
    code         varchar(255)                                                                                                             NOT NULL,
    "name"       varchar(255)                                                                                                             NOT NULL,
    CONSTRAINT permission_pkey PRIMARY KEY (id),
    CONSTRAINT uk2ojme20jpga3r4r79tdso17gi UNIQUE (name),
    CONSTRAINT uka7ujv987la0i7a0o91ueevchc UNIQUE (code)
);


-- public.refresh_token definition

-- Drop table

-- DROP TABLE refresh_token;

CREATE TABLE refresh_token
(
    id           int8 GENERATED BY DEFAULT AS IDENTITY ( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1 NO CYCLE) NOT NULL,
    created_date timestamp(6) NULL,
    updated_date timestamp(6) NULL,
    expire_time  timestamp(6) NULL,
    "token"      varchar(1000)                                                                                                            NOT NULL,
    username     varchar(255)                                                                                                             NOT NULL,
    CONSTRAINT refresh_token_pkey PRIMARY KEY (id),
    CONSTRAINT ukr4k4edos30bx9neoq81mdvwph UNIQUE (token)
);


-- public.roles definition

-- Drop table

-- DROP TABLE roles;

CREATE TABLE roles
(
    id           int8 GENERATED BY DEFAULT AS IDENTITY ( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1 NO CYCLE) NOT NULL,
    created_date timestamp(6) NULL,
    updated_date timestamp(6) NULL,
    code         varchar(255)                                                                                                             NOT NULL,
    "name"       varchar(255) NULL,
    CONSTRAINT roles_pkey PRIMARY KEY (id),
    CONSTRAINT ukch1113horj4qr56f91omojv8 UNIQUE (code)
);


-- public.users definition

-- Drop table

-- DROP TABLE users;

CREATE TABLE users
(
    id              uuid         NOT NULL,
    created_date    timestamp(6) NULL,
    updated_date    timestamp(6) NULL,
    avatar_url      varchar(255) NULL,
    birthday        date NULL,
    description     text NULL,
    email           varchar(255) NOT NULL,
    is_enabled      bool NULL,
    failed_attempts int4 DEFAULT 0 NULL,
    full_name       varchar(255) NULL,
    is_collaborator bool NULL,
    is_locked       bool NULL,
    is_using_2fa    bool NULL,
    lock_time       timestamp(6) NULL,
    "password"      varchar(255) NULL,
    phone           varchar(255) NULL,
    username        varchar(255) NOT NULL,
    CONSTRAINT uk6dotkott2kjsp8vw4d0m25fb7 UNIQUE (email),
    CONSTRAINT ukdu5v5sr43g5bfnji4vb8hg5s3 UNIQUE (phone),
    CONSTRAINT ukr43af9ap4edm43mmtq01oddj6 UNIQUE (username),
    CONSTRAINT users_pkey PRIMARY KEY (id)
);


-- public.action_tokens definition

-- Drop table

-- DROP TABLE action_tokens;

CREATE TABLE action_tokens
(
    id           int8 GENERATED BY DEFAULT AS IDENTITY ( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1 NO CYCLE) NOT NULL,
    created_date timestamp(6) NULL,
    updated_date timestamp(6) NULL,
    expired_at   timestamp(6) NULL,
    "token"      varchar(255) NULL,
    "type"       varchar(255) NULL,
    user_id      uuid NULL,
    CONSTRAINT action_tokens_pkey PRIMARY KEY (id),
    CONSTRAINT action_tokens_type_check CHECK (((type)::text = ANY ((ARRAY['RESET_PASSWORD':: character varying, 'VERIFY_ACCOUNT':: character varying, 'CONFIRM_EMAIL':: character varying, 'INVITE_USER':: character varying])::text[])
) ),
	CONSTRAINT ukle0nv0qi6ovu2js8erdrqsv0q UNIQUE (token),
	CONSTRAINT fkmq3hkn2obmb0wjmg9v3vrb3c7 FOREIGN KEY (user_id) REFERENCES users(id)
);
CREATE INDEX idx_password_reset_token ON action_tokens USING btree (token);


-- public.role_permission definition

-- Drop table

-- DROP TABLE role_permission;

CREATE TABLE role_permission
(
    role_id       int8 NOT NULL,
    permission_id int8 NOT NULL,
    CONSTRAINT role_permission_pkey PRIMARY KEY (role_id, permission_id),
    CONSTRAINT fkf8yllw1ecvwqy3ehyxawqa1qp FOREIGN KEY (permission_id) REFERENCES "permission" (id),
    CONSTRAINT fktfgq8q9blrp0pt1pvggyli3v9 FOREIGN KEY (role_id) REFERENCES roles (id)
);


-- public.user_roles definition

-- Drop table

-- DROP TABLE user_roles;

CREATE TABLE user_roles
(
    user_id uuid NOT NULL,
    role_id int8 NOT NULL,
    CONSTRAINT user_roles_pkey PRIMARY KEY (user_id, role_id),
    CONSTRAINT fkh8ciramu9cc9q3qcqiv4ue8a6 FOREIGN KEY (role_id) REFERENCES roles (id),
    CONSTRAINT fkhfh9dx7w3ubf1co1vdev94g3f FOREIGN KEY (user_id) REFERENCES users (id)
);